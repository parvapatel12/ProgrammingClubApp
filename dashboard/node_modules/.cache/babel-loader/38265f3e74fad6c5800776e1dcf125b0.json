{"ast":null,"code":"import _classCallCheck from \"/home/shagun/ProgrammingClubApp/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shagun/ProgrammingClubApp/dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shagun/ProgrammingClubApp/dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shagun/ProgrammingClubApp/dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shagun/ProgrammingClubApp/dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shagun/ProgrammingClubApp/dashboard/src/components/Addcomment.js\";\nimport React, { Component } from \"react\";\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport \"./Blog.css\";\nimport draftToHtml from 'draftjs-to-html'; //import htmlToDraft from 'html-to-draftjs';\n\nimport firebase from \"firebase\";\n\nvar Addcomment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Addcomment, _Component);\n\n  function Addcomment(props) {\n    var _this;\n\n    _classCallCheck(this, Addcomment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Addcomment).call(this, props));\n\n    _this.onEditorStateChange = function (editorState) {\n      _this.setState({\n        editorState: editorState\n      });\n    };\n\n    _this.state = {\n      userName: 'parvapatel12',\n      content: ' ',\n      parentblogid: 0,\n      replylist: [],\n      editorState: EditorState.createEmpty(),\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      commentlist: []\n    };\n    _this.commentRef = firebase.database().ref().child('comment_list');\n    _this.ref = firebase.database().ref().child('commentid');\n    var currid = 0;\n    firebase.database().ref().child('commentid').on(\"value\", function (snapshot) {\n      currid = snapshot.val();\n    }, function (error) {\n      console.log(\"Error: \" + error.code);\n    });\n    console.log(_this.props.message.id);\n    return _this;\n  }\n\n  _createClass(Addcomment, [{\n    key: \"handleSend\",\n    value: function handleSend() {\n      var currid;\n      var ref = firebase.database().ref().child('commentid');\n      ref.on(\"value\", function (snapshot) {\n        currid = snapshot.val();\n      }, function (error) {\n        console.log(\"Error: \" + error.code);\n      }); //  console.log(this.state.blogid);\n\n      if (1) {\n        var newItem = {\n          id: currid,\n          userName: this.state.userName,\n          content: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())),\n          replylist: this.state.replylist,\n          timestamp: firebase.database.ServerValue.TIMESTAMP\n        };\n        ref.transaction(function (currid) {\n          return currid + 1;\n        }); //firebase.database().ref().update({blogid :currid});\n\n        this.commentRef.push(newItem);\n        currid -= 1;\n        var tempid = this.props.message.id;\n        var commentarray = this.props.message.commentlist;\n\n        if (typeof commentarray === 'undefined') {\n          commentarray = new Array(1).fill(currid);\n        } else commentarray.push(currid); //console.log(typeof commentarray);\n\n\n        var curr_key;\n        var query = firebase.database().ref(\"blog_entry\").orderByKey();\n        query.once(\"value\").then(function (snapshot) {\n          snapshot.forEach(function (childSnapshot) {\n            var childData = childSnapshot.val();\n            console.log(tempid);\n\n            if (childData.id == tempid) {\n              curr_key = childSnapshot.key;\n              firebase.database().ref().child(\"blog_entry\").child(curr_key).update({\n                commentlist: commentarray\n              });\n            }\n          });\n        }); //firebase.database().ref().child(\"blog_entry\").child(this.props.message.key);\n        // this.setState({ title: '' });\n\n        this.setState({\n          content: ''\n        });\n        this.setState({\n          editorState: EditorState.createEmpty()\n        });\n      } //  window.location.reload();\n\n    }\n  }, {\n    key: \"handleKeyPress\",\n    value: function handleKeyPress(event) {\n      if (event.key !== 'Enter') return;\n      this.handleSend();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var editorState = this.state.editorState;\n      return React.createElement(\"div\", {\n        className: \"add-comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Editor, {\n        className: \"rich_text_own\",\n        editorState: editorState,\n        wrapperClassName: \"demo-wrapper\",\n        editorClassName: \"demo-editor\",\n        onEditorStateChange: this.onEditorStateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"submit-comment-btn\",\n        onClick: this.handleSend.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Submit Comment\"), React.createElement(\"div\", {\n        className: \"for-space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Addcomment;\n}(Component);\n\nexport default Addcomment;","map":{"version":3,"sources":["/home/shagun/ProgrammingClubApp/dashboard/src/components/Addcomment.js"],"names":["React","Component","Editor","EditorState","convertToRaw","draftToHtml","firebase","Addcomment","props","onEditorStateChange","editorState","setState","state","userName","content","parentblogid","replylist","createEmpty","timestamp","database","ServerValue","TIMESTAMP","commentlist","commentRef","ref","child","currid","on","snapshot","val","error","console","log","code","message","id","newItem","getCurrentContent","transaction","push","tempid","commentarray","Array","fill","curr_key","query","orderByKey","once","then","forEach","childSnapshot","childData","key","update","event","handleSend","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport \"./Blog.css\";\n\nimport draftToHtml from 'draftjs-to-html';\n//import htmlToDraft from 'html-to-draftjs';\n\n\nimport firebase from \"firebase\";\n\n\nclass Addcomment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userName: 'parvapatel12',\n      content: ' ',\n      parentblogid: 0,\n      replylist: [],\n      editorState: EditorState.createEmpty(),\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      commentlist: []\n    };\n    this.commentRef = firebase.database().ref().child('comment_list');\n    this.ref = firebase.database().ref().child('commentid');\n\n    var currid = 0;\n\n    firebase.database().ref().child('commentid').on(\"value\", function (snapshot) {\n      currid = snapshot.val();\n    }, function (error) {\n      console.log(\"Error: \" + error.code);\n    });\n\n    console.log(this.props.message.id);\n\n\n  }\n  onEditorStateChange = (editorState) => {\n    this.setState({\n      editorState,\n    });\n  };\n\n\n  handleSend() {\n\n    var currid;\n    var ref = firebase.database().ref().child('commentid');\n    ref.on(\"value\", function (snapshot) {\n      currid = snapshot.val();\n    }, function (error) {\n      console.log(\"Error: \" + error.code);\n    });\n\n\n\n    //  console.log(this.state.blogid);\n    if (1) {\n      var newItem = {\n        id: currid,\n        userName: this.state.userName,\n        content: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())),\n        replylist: this.state.replylist,\n        timestamp: firebase.database.ServerValue.TIMESTAMP\n      };\n\n      ref.transaction(function (currid) {\n        return currid + 1;\n      });\n\n      //firebase.database().ref().update({blogid :currid});\n\n\n      this.commentRef.push(newItem);\n      currid -= 1;\n      var tempid = this.props.message.id;\n      var commentarray = (this.props.message.commentlist);\n\n      if (typeof commentarray === 'undefined') {\n        commentarray = new Array(1).fill(currid);\n      }\n      else\n        commentarray.push(currid);\n\n      //console.log(typeof commentarray);\n      var curr_key;\n\n      var query = firebase.database().ref(\"blog_entry\").orderByKey();\n\n      query.once(\"value\")\n        .then(function (snapshot) {\n          snapshot.forEach(function (childSnapshot) {\n\n            var childData = childSnapshot.val();\n            console.log(tempid);\n            if (childData.id == tempid) {\n              curr_key = childSnapshot.key;\n              firebase.database().ref().child(\"blog_entry\").child(curr_key).update({ commentlist: commentarray });\n\n            }\n          });\n        });\n\n\n      //firebase.database().ref().child(\"blog_entry\").child(this.props.message.key);\n      // this.setState({ title: '' });\n      this.setState({ content: '' });\n      this.setState({ editorState: EditorState.createEmpty() });\n    }\n    //  window.location.reload();\n  }\n\n\n\n  handleKeyPress(event) {\n    if (event.key !== 'Enter') return;\n    this.handleSend();\n\n  }\n\n\n  render() {\n    const { editorState } = this.state;\n    return (\n      <div className=\"add-comment\">\n        <Editor\n          className=\"rich_text_own\"\n          editorState={editorState}\n          wrapperClassName=\"demo-wrapper\"\n          editorClassName=\"demo-editor\"\n          onEditorStateChange={this.onEditorStateChange}\n        />\n        {/* <div>{this.state.taglist}</div> */}\n\n        <div \n          className=\"submit-comment-btn\"\n          onClick={this.handleSend.bind(this)}\n        >Submit Comment</div>\n        <div className=\"for-space\"></div>\n      </div>\n    );\n  }\n}\n\nexport default Addcomment;\n"]},"metadata":{},"sourceType":"module"}